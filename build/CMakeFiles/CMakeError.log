Determining if the pthread_create exist failed with the following output:
Change Dir: /home/gaotianyu/ros_learn_ws/build/CMakeFiles/CMakeTmp

Run Build Command:"/usr/bin/make" "cmTC_6638e/fast"
/usr/bin/make -f CMakeFiles/cmTC_6638e.dir/build.make CMakeFiles/cmTC_6638e.dir/build
make[1]: 进入目录“/home/gaotianyu/ros_learn_ws/build/CMakeFiles/CMakeTmp”
Building C object CMakeFiles/cmTC_6638e.dir/CheckSymbolExists.c.o
/usr/bin/cc    -o CMakeFiles/cmTC_6638e.dir/CheckSymbolExists.c.o   -c /home/gaotianyu/ros_learn_ws/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c
Linking C executable cmTC_6638e
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_6638e.dir/link.txt --verbose=1
/usr/bin/cc      -rdynamic CMakeFiles/cmTC_6638e.dir/CheckSymbolExists.c.o  -o cmTC_6638e 
CMakeFiles/cmTC_6638e.dir/CheckSymbolExists.c.o：在函数‘main’中：
CheckSymbolExists.c:(.text+0x1b)：对‘pthread_create’未定义的引用
collect2: error: ld returned 1 exit status
CMakeFiles/cmTC_6638e.dir/build.make:97: recipe for target 'cmTC_6638e' failed
make[1]: *** [cmTC_6638e] Error 1
make[1]: 离开目录“/home/gaotianyu/ros_learn_ws/build/CMakeFiles/CMakeTmp”
Makefile:126: recipe for target 'cmTC_6638e/fast' failed
make: *** [cmTC_6638e/fast] Error 2

File /home/gaotianyu/ros_learn_ws/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include <pthread.h>

int main(int argc, char** argv)
{
  (void)argv;
#ifndef pthread_create
  return ((int*)(&pthread_create))[argc];
#else
  (void)argc;
  return 0;
#endif
}

Determining if the function pthread_create exists in the pthreads failed with the following output:
Change Dir: /home/gaotianyu/ros_learn_ws/build/CMakeFiles/CMakeTmp

Run Build Command:"/usr/bin/make" "cmTC_8ab5c/fast"
/usr/bin/make -f CMakeFiles/cmTC_8ab5c.dir/build.make CMakeFiles/cmTC_8ab5c.dir/build
make[1]: 进入目录“/home/gaotianyu/ros_learn_ws/build/CMakeFiles/CMakeTmp”
Building C object CMakeFiles/cmTC_8ab5c.dir/CheckFunctionExists.c.o
/usr/bin/cc   -DCHECK_FUNCTION_EXISTS=pthread_create   -o CMakeFiles/cmTC_8ab5c.dir/CheckFunctionExists.c.o   -c /usr/share/cmake-3.10/Modules/CheckFunctionExists.c
Linking C executable cmTC_8ab5c
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_8ab5c.dir/link.txt --verbose=1
/usr/bin/cc  -DCHECK_FUNCTION_EXISTS=pthread_create    -rdynamic CMakeFiles/cmTC_8ab5c.dir/CheckFunctionExists.c.o  -o cmTC_8ab5c -lpthreads 
/usr/bin/ld: 找不到 -lpthreads
collect2: error: ld returned 1 exit status
CMakeFiles/cmTC_8ab5c.dir/build.make:97: recipe for target 'cmTC_8ab5c' failed
make[1]: *** [cmTC_8ab5c] Error 1
make[1]: 离开目录“/home/gaotianyu/ros_learn_ws/build/CMakeFiles/CMakeTmp”
Makefile:126: recipe for target 'cmTC_8ab5c/fast' failed
make: *** [cmTC_8ab5c/fast] Error 2


Performing C SOURCE FILE Test CMAKE_HAVE_LIBC_PTHREAD failed with the following output:
Change Dir: /home/gaotianyu/ros_learn_ws/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_da880/fast && /usr/bin/make  -f CMakeFiles/cmTC_da880.dir/build.make CMakeFiles/cmTC_da880.dir/build
make[1]: 进入目录“/home/gaotianyu/ros_learn_ws/build/CMakeFiles/CMakeTmp”
Building C object CMakeFiles/cmTC_da880.dir/src.c.o
/usr/bin/cc   -DCMAKE_HAVE_LIBC_PTHREAD   -o CMakeFiles/cmTC_da880.dir/src.c.o   -c /home/gaotianyu/ros_learn_ws/build/CMakeFiles/CMakeTmp/src.c
Linking C executable cmTC_da880
/opt/cmake-3.16.7/bin/cmake -E cmake_link_script CMakeFiles/cmTC_da880.dir/link.txt --verbose=1
/usr/bin/cc  -DCMAKE_HAVE_LIBC_PTHREAD    -rdynamic CMakeFiles/cmTC_da880.dir/src.c.o  -o cmTC_da880 
CMakeFiles/cmTC_da880.dir/src.c.o：在函数‘main’中：
src.c:(.text+0x3e)：对‘pthread_create’未定义的引用
src.c:(.text+0x4a)：对‘pthread_detach’未定义的引用
src.c:(.text+0x5b)：对‘pthread_join’未定义的引用
src.c:(.text+0x6f)：对‘pthread_atfork’未定义的引用
collect2: error: ld returned 1 exit status
CMakeFiles/cmTC_da880.dir/build.make:89: recipe for target 'cmTC_da880' failed
make[1]: *** [cmTC_da880] Error 1
make[1]: 离开目录“/home/gaotianyu/ros_learn_ws/build/CMakeFiles/CMakeTmp”
Makefile:124: recipe for target 'cmTC_da880/fast' failed
make: *** [cmTC_da880/fast] Error 2


Source file was:
#include <pthread.h>

void* test_func(void* data)
{
  return data;
}

int main(void)
{
  pthread_t thread;
  pthread_create(&thread, NULL, test_func, NULL);
  pthread_detach(thread);
  pthread_join(thread, NULL);
  pthread_atfork(NULL, NULL, NULL);
  pthread_exit(NULL);

  return 0;
}

